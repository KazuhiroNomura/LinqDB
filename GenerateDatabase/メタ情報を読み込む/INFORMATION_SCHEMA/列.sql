DECLARE @CATALOG NVARCHAR(MAX),@SCHEMA NVARCHAR(MAX),@TABLE_NAME NVARCHAR(MAX)
USE [AdventureWorksDW2017]
SELECT @CATALOG='AdventureWorksDW2017',@SCHEMA='dbo',@TABLE_NAME='NewFactCurrencyRate';
SELECT COUNT(*)FROM (
	SELECT C.DATA_TYPE,KCU.COLUMN_NAME,TC.CONSTRAINT_CATALOG,TC.CONSTRAINT_SCHEMA,TC.TABLE_NAME,KCU.ORDINAL_POSITION
	FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
	JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CCU ON TC .CONSTRAINT_CATALOG=CCU.CONSTRAINT_CATALOG AND TC .CONSTRAINT_SCHEMA=CCU.CONSTRAINT_SCHEMA AND TC .TABLE_NAME=CCU.TABLE_NAME AND TC .CONSTRAINT_NAME=CCU.CONSTRAINT_NAME
	JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE        KCU ON CCU.CONSTRAINT_CATALOG=KCU.CONSTRAINT_CATALOG AND CCU.CONSTRAINT_SCHEMA=KCU.CONSTRAINT_SCHEMA AND CCU.TABLE_NAME=KCU.TABLE_NAME AND CCU.CONSTRAINT_NAME=KCU.CONSTRAINT_NAME AND CCU.COLUMN_NAME=KCU.COLUMN_NAME
	JOIN INFORMATION_SCHEMA.COLUMNS                 C   ON KCU.CONSTRAINT_CATALOG=C  .TABLE_CATALOG      AND KCU.CONSTRAINT_SCHEMA=C  .TABLE_SCHEMA      AND KCU.TABLE_NAME=C  .TABLE_NAME AND KCU.COLUMN_NAME    =C  .COLUMN_NAME
	WHERE TC.CONSTRAINT_TYPE='PRIMARY KEY'AND TC.TABLE_CATALOG=@CATALOG AND TC.TABLE_SCHEMA=@SCHEMA AND TC.TABLE_NAME=@TABLE_NAME
)A;
--	SELECT C.DATA_TYPE,KCU.COLUMN_NAME,TC.CONSTRAINT_CATALOG,TC.CONSTRAINT_SCHEMA,TC.TABLE_NAME,KCU.ORDINAL_POSITION
--	FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
--	JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CCU ON TC .CONSTRAINT_CATALOG=CCU.CONSTRAINT_CATALOG AND TC .CONSTRAINT_SCHEMA=CCU.CONSTRAINT_SCHEMA AND TC .TABLE_NAME=CCU.TABLE_NAME AND TC .CONSTRAINT_NAME=CCU.CONSTRAINT_NAME
--	JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE        KCU ON CCU.CONSTRAINT_CATALOG=KCU.CONSTRAINT_CATALOG AND CCU.CONSTRAINT_SCHEMA=KCU.CONSTRAINT_SCHEMA AND CCU.TABLE_NAME=KCU.TABLE_NAME AND CCU.CONSTRAINT_NAME=KCU.CONSTRAINT_NAME AND CCU.COLUMN_NAME=KCU.COLUMN_NAME
--	JOIN INFORMATION_SCHEMA.COLUMNS                 C   ON KCU.CONSTRAINT_CATALOG=C  .TABLE_CATALOG      AND KCU.CONSTRAINT_SCHEMA=C  .TABLE_SCHEMA      AND KCU.TABLE_NAME=C  .TABLE_NAME AND KCU.COLUMN_NAME    =C  .COLUMN_NAME
--	WHERE TC.CONSTRAINT_TYPE='PRIMARY KEY'
--ORDER BY TC.CONSTRAINT_CATALOG,TC.CONSTRAINT_SCHEMA,TC.TABLE_NAME,KCU.ORDINAL_POSITION
WITH PRIMARY_KEY AS (
	SELECT C.DATA_TYPE,KCU.COLUMN_NAME,TC.CONSTRAINT_CATALOG,TC.CONSTRAINT_SCHEMA,TC.TABLE_NAME,KCU.ORDINAL_POSITION
	FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
	JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CCU ON TC .CONSTRAINT_CATALOG=CCU.CONSTRAINT_CATALOG AND TC .CONSTRAINT_SCHEMA=CCU.CONSTRAINT_SCHEMA AND TC .TABLE_NAME=CCU.TABLE_NAME AND TC .CONSTRAINT_NAME=CCU.CONSTRAINT_NAME
	JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE        KCU ON CCU.CONSTRAINT_CATALOG=KCU.CONSTRAINT_CATALOG AND CCU.CONSTRAINT_SCHEMA=KCU.CONSTRAINT_SCHEMA AND CCU.TABLE_NAME=KCU.TABLE_NAME AND CCU.CONSTRAINT_NAME=KCU.CONSTRAINT_NAME AND CCU.COLUMN_NAME=KCU.COLUMN_NAME
	JOIN INFORMATION_SCHEMA.COLUMNS                 C   ON KCU.CONSTRAINT_CATALOG=C  .TABLE_CATALOG      AND KCU.CONSTRAINT_SCHEMA=C  .TABLE_SCHEMA      AND KCU.TABLE_NAME=C  .TABLE_NAME AND KCU.COLUMN_NAME    =C  .COLUMN_NAME
	WHERE TC.CONSTRAINT_TYPE='PRIMARY KEY'AND TC.TABLE_CATALOG=@CATALOG AND TC.TABLE_SCHEMA=@SCHEMA AND TC.TABLE_NAME=@TABLE_NAME
)
SELECT COLUMNS.DATA_TYPE,COLUMNS.COLUMN_NAME,COLUMNS.IS_NULLABLE,CASE WHEN(SELECT COUNT(*)FROM PRIMARY_KEY)=0 THEN 1 WHEN PRIMARY_KEY.ORDINAL_POSITION IS NULL THEN 0 ELSE 1 END IsPrimaryKey
FROM INFORMATION_SCHEMA.COLUMNS COLUMNS
LEFT JOIN PRIMARY_KEY ON COLUMNS.TABLE_CATALOG=PRIMARY_KEY.CONSTRAINT_CATALOG AND COLUMNS.TABLE_SCHEMA=PRIMARY_KEY.CONSTRAINT_SCHEMA AND COLUMNS.TABLE_NAME=PRIMARY_KEY.TABLE_NAME AND COLUMNS.COLUMN_NAME=PRIMARY_KEY.COLUMN_NAME
WHERE COLUMNS.TABLE_CATALOG=@CATALOG AND COLUMNS.TABLE_SCHEMA=@SCHEMA AND COLUMNS.TABLE_NAME=@TABLE_NAME
ORDER BY COLUMNS.TABLE_CATALOG,COLUMNS.TABLE_SCHEMA,COLUMNS.TABLE_NAME,COLUMNS.ORDINAL_POSITION

--SELECT CASE WHEN PRIMARY_KEY.ORDINAL_POSITION IS NULL THEN''ELSE'True'END,COLUMNS.DATA_TYPE,COLUMNS.COLUMN_NAME,COLUMNS.IS_NULLABLE,COLUMNS.TABLE_CATALOG,COLUMNS.TABLE_SCHEMA,COLUMNS.TABLE_NAME,COLUMNS.ORDINAL_POSITION
--FROM INFORMATION_SCHEMA.COLUMNS COLUMNS
--LEFT JOIN(
--	SELECT C.DATA_TYPE,KCU.COLUMN_NAME,TC.CONSTRAINT_CATALOG,TC.CONSTRAINT_SCHEMA,TC.TABLE_NAME,KCU.ORDINAL_POSITION
--	FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
--	JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CCU ON TC .CONSTRAINT_CATALOG=CCU.CONSTRAINT_CATALOG AND TC .CONSTRAINT_SCHEMA=CCU.CONSTRAINT_SCHEMA AND TC .TABLE_NAME=CCU.TABLE_NAME AND TC .CONSTRAINT_NAME=CCU.CONSTRAINT_NAME
--	JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE        KCU ON CCU.CONSTRAINT_CATALOG=KCU.CONSTRAINT_CATALOG AND CCU.CONSTRAINT_SCHEMA=KCU.CONSTRAINT_SCHEMA AND CCU.TABLE_NAME=KCU.TABLE_NAME AND CCU.CONSTRAINT_NAME=KCU.CONSTRAINT_NAME AND CCU.COLUMN_NAME=KCU.COLUMN_NAME
--	JOIN INFORMATION_SCHEMA.COLUMNS                 C   ON KCU.CONSTRAINT_CATALOG=C  .TABLE_CATALOG      AND KCU.CONSTRAINT_SCHEMA=C  .TABLE_SCHEMA      AND KCU.TABLE_NAME=C  .TABLE_NAME AND KCU.COLUMN_NAME    =C  .COLUMN_NAME
--	WHERE TC.CONSTRAINT_TYPE='PRIMARY KEY'
--)PRIMARY_KEY ON COLUMNS.TABLE_CATALOG=PRIMARY_KEY.CONSTRAINT_CATALOG AND COLUMNS.TABLE_SCHEMA=PRIMARY_KEY.CONSTRAINT_SCHEMA AND COLUMNS.TABLE_NAME=PRIMARY_KEY.TABLE_NAME AND COLUMNS.COLUMN_NAME=PRIMARY_KEY.COLUMN_NAME
--ORDER BY COLUMNS.TABLE_CATALOG,COLUMNS.TABLE_SCHEMA,COLUMNS.TABLE_NAME,COLUMNS.ORDINAL_POSITION


----USE [TPC-H] 
--SELECT DATA_TYPE,COLUMN_NAME,IS_NULLABLE,COLUMNS.TABLE_CATALOG,COLUMNS.TABLE_SCHEMA,COLUMNS.TABLE_NAME,COLUMNS.ORDINAL_POSITION
--FROM INFORMATION_SCHEMA.COLUMNS
----WHERE TABLE_CATALOG=@CATALOG --AND TABLE_SCHEMA=@SCHEMA AND TABLE_NAME=@TABLE_NAME
--ORDER BY COLUMNS.TABLE_CATALOG,COLUMNS.TABLE_SCHEMA,COLUMNS.TABLE_NAME,COLUMNS.ORDINAL_POSITION

----USE [TPC-H] 
--SELECT DATA_TYPE,COLUMN_NAME,IS_NULLABLE
--FROM INFORMATION_SCHEMA.COLUMNS
--ORDER BY ORDINAL_POSITION

